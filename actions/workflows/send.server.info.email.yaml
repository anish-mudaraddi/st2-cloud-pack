version: 1.0

description: Send Emails to Users with VMs that match query

input:
  - cloud_account
  - email_from
  - query_preset
  - criteria_list
  - footer
  - message
  - header
  - subject
  - send_html
  - smtp_account
  - admin_override
  - admin_override_email
  - days
  - names
  - ids
  - name_snippets

vars:
  - emails: null
  - email_bodies: null
  - stdout: null
  - stderr: null

output:
  - stdout: <% ctx().stdout %>
  - stderr: <% ctx().stderr %>

tasks:
  find_servers:
    action: stackstorm_openstack.server.list.per.user
      cloud_account=<% ctx().cloud_account %>
      query_preset=<% ctx().query_preset %>
      search_criteria=<% ctx().criteria_list %>
      days=<% ctx().days %>
      names=<% ctx().names %>
      ids=<% ctx().ids %>
      name_snippets=<% ctx().name_snippets %>
      get_html=<% ctx().send_html %>
    next:
      - when: <% result().result != null %>
        publish:
          - emails: <% result().result.keys() %>
          - email_bodies: <% result().result %>
        #  - stdout: <% result().result.keys() %>, <% result().result.values() %>
        do:
          - send_email
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
        do: fail

  send_email:
    with: email in <% ctx(emails) %>
    action: stackstorm_openstack.send.email
      send_as_html=<% ctx().send_html %>
      smtp_account=<% ctx().smtp_account %>
      email_from=<% ctx().email_from %>
      email_to=<% list(item(email)) %>
      body=<% ctx().message + ctx().email_bodies[item(email)] %>
      subject=<% ctx().subject %>
      footer=<% ctx().footer %>
      header=<% ctx().header %>
      admin_override=<% ctx().admin_override %>
      admin_override_email=<% ctx().admin_override_email %>
    next:
      - when: <% succeeded() %>
        publish:
          - stdout: <% result().stdout %>
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
        do: fail
