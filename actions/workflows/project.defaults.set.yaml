version: 1.0

description: Set Project Defaults Workflow

input:
  - cloud_account
  - project_uuid

vars:
  - stderr: null

tasks:
  set_project_defaults:
    action: core.noop
    next:
      - do:
        - wait_for_default_security_group
        - create_security_group_http
        - create_security_group_https

  wait_for_default_security_group:
    # We need to force Openstack to resync between the
    # DB and Neutron by querying. This avoids the default
    # SC not appearing until someone goes onto the web UI
    action: stackstorm_openstack.security.group.list
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
    next:
      - when: <% succeeded() %>
        do:
          - allow_all_icmp_by_default
          - allow_ssh_by_default
          - allow_aquilon_notify_by_default

  allow_all_icmp_by_default:
    action: stackstorm_openstack.security.group.rule.create
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
      security_group_identifier="default"
      direction="ingress"
      ether_type="IPV4"
      protocol="ICMP"
      start_port="*"
      end_port="*"

  allow_ssh_by_default:
    action: stackstorm_openstack.security.group.rule.create
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
      security_group_identifier="default"
      direction="ingress"
      ether_type="IPV4"
      protocol="TCP"
      start_port="22"
      end_port="22"

  allow_aquilon_notify_by_default:
    action: stackstorm_openstack.security.group.rule.create
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
      security_group_identifier="default"
      direction="ingress"
      ether_type="IPV4"
      protocol="UDP"
      start_port="7777"
      end_port="7777"

  create_security_group_http:
    action: stackstorm_openstack.security.group.create
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
      group_name="HTTP"
      group_description="Rules allowing HTTP traffic ingress"
    next:
      - when: <% succeeded() %>
        do: allow_http_traffic

  allow_http_traffic:
    action: stackstorm_openstack.security.group.rule.create
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
      security_group_identifier="HTTP"
      direction="ingress"
      ether_type="IPV4"
      protocol="TCP"
      start_port="80"
      end_port="80"

  create_security_group_https:
    action: stackstorm_openstack.security.group.create
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
      group_name="HTTPS"
      group_description="Rules allowing HTTPS traffic ingress"
    next:
      - when: <% succeeded() %>
        do:
          - allow_https_traffic
          - allow_https_HTTP3_traffic

  allow_https_traffic:
    action: stackstorm_openstack.security.group.rule.create
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
      security_group_identifier="HTTPS"
      direction="ingress"
      ether_type="IPV4"
      protocol="TCP"
      start_port="443"
      end_port="443"

  allow_https_HTTP3_traffic:
    # HTTP3 runs over UDP (aka QUIC protocol)
    action: stackstorm_openstack.security.group.rule.create
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
      security_group_identifier="HTTPS"
      direction="ingress"
      ether_type="IPV4"
      protocol="UDP"
      start_port="443"
      end_port="443"

output:
  - stderr: <% ctx().stderr %>
  - project_id: <% ctx().project_uuid %>
